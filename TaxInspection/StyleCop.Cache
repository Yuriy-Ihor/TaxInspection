<stylecopresultscache>
  <version>12</version>
  <sourcecode name="DataGenerator.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.11.10 21:38:41.227</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" ruleCheckId="SA1500">
        <context>If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" ruleCheckId="SA1500">
        <context>If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingCurlyBracketsMustBeSpacedCorrectly" ruleCheckId="SA1013">
        <context>Invalid spacing around the closing curly bracket.</context>
        <line>12</line>
        <index>620</index>
        <endIndex>620</endIndex>
        <startLine>12</startLine>
        <startColumn>128</startColumn>
        <endLine>12</endLine>
        <endColumn>128</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" ruleCheckId="SA1500">
        <context>If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" ruleCheckId="SA1500">
        <context>If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingCurlyBracketsMustBeSpacedCorrectly" ruleCheckId="SA1013">
        <context>Invalid spacing around the closing curly bracket.</context>
        <line>16</line>
        <index>1021</index>
        <endIndex>1021</endIndex>
        <startLine>16</startLine>
        <startColumn>89</startColumn>
        <endLine>16</endLine>
        <endColumn>89</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="Resources.Designer.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.10.31 14:57:15.930</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations />
  </sourcecode>
  <sourcecode name="NaturalPerson.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.11.09 23:32:40.239</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>4</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementMustNotBeOnSingleLine" ruleCheckId="SA1502">
        <context>The constructor must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Id must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>17</line>
        <index>522</index>
        <endIndex>523</endIndex>
        <startLine>17</startLine>
        <startColumn>13</startColumn>
        <endLine>17</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Name must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>18</line>
        <index>544</index>
        <endIndex>547</endIndex>
        <startLine>18</startLine>
        <startColumn>13</startColumn>
        <endLine>18</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Surname must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>19</line>
        <index>570</index>
        <endIndex>576</endIndex>
        <startLine>19</startLine>
        <startColumn>13</startColumn>
        <endLine>19</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to IdentificationCode must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>20</line>
        <index>602</index>
        <endIndex>619</endIndex>
        <startLine>20</startLine>
        <startColumn>13</startColumn>
        <endLine>20</endLine>
        <endColumn>30</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to PassportCode must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>21</line>
        <index>647</index>
        <endIndex>658</endIndex>
        <startLine>21</startLine>
        <startColumn>13</startColumn>
        <endLine>21</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="AutoCompleteTextBoxUserControl.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.11.11 00:54:41.279</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="Settings.Designer.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.10.31 14:57:15.936</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations />
  </sourcecode>
  <sourcecode name="JuridicalPersons.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.11.10 00:46:39.331</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>3</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>3</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>4</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'xaml'</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>55</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'JuridicalPersons.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>335</index>
        <endIndex>353</endIndex>
        <startLine>15</startLine>
        <startColumn>13</startColumn>
        <endLine>15</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfPersonIsBusy must begin with the 'this.', 'base.', 'object.' or 'JuridicalPersons.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>30</line>
        <index>879</index>
        <endIndex>897</endIndex>
        <startLine>30</startLine>
        <startColumn>20</startColumn>
        <endLine>30</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>30</line>
        <index>876</index>
        <endIndex>877</endIndex>
        <startLine>30</startLine>
        <startColumn>17</startColumn>
        <endLine>30</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>42</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfPersonIsBusy.</context>
        <line>42</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="TaxesPayedByJurPersons.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.11.09 20:43:41.405</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'TaxesPayedByJurPersons.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>10</line>
        <index>230</index>
        <endIndex>248</endIndex>
        <startLine>10</startLine>
        <startColumn>13</startColumn>
        <endLine>10</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: button1_Click.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="TaxesPayedByNatPersons.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.11.09 18:35:54.469</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBePlacedWithinNamespace" ruleCheckId="SA1200">
        <context>All using directives must be placed inside of the namespace.</context>
        <line>3</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'Payed', 'xaml'</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'TaxesPayedByNatPersons.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>14</line>
        <index>351</index>
        <endIndex>369</endIndex>
        <startLine>14</startLine>
        <startColumn>13</startColumn>
        <endLine>14</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="PayedTax.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:56:40.178</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="Tools.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:43:28.356</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" ruleCheckId="SA1208">
        <context>System using directives must be placed before all other using directives.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All methods must be placed after all fields.</context>
        <line>64</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>36</line>
        <index>958</index>
        <endIndex>1028</endIndex>
        <startLine>36</startLine>
        <startColumn>28</startColumn>
        <endLine>36</endLine>
        <endColumn>98</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>37</line>
        <index>1057</index>
        <endIndex>1121</endIndex>
        <startLine>37</startLine>
        <startColumn>26</startColumn>
        <endLine>37</endLine>
        <endColumn>90</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>43</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>45</line>
        <index>1336</index>
        <endIndex>1424</endIndex>
        <startLine>45</startLine>
        <startColumn>28</startColumn>
        <endLine>45</endLine>
        <endColumn>116</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>46</line>
        <index>1453</index>
        <endIndex>1535</endIndex>
        <startLine>46</startLine>
        <startColumn>26</startColumn>
        <endLine>46</endLine>
        <endColumn>108</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>52</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>64</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>64</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="StaticReadonlyFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1311">
        <context>Static readonly fields must start with an upper-case letter: _onlyNumbersRegex.</context>
        <line>64</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>65</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>65</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="Logger.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:20:44.017</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="AssemblyInfo.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:03:08.039</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainMultipleBlankLinesInARow" ruleCheckId="SA1507">
        <context>The code must not contain multiple blank lines in a row.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentsMustNotBeFollowedByBlankLine" ruleCheckId="SA1512">
        <context>A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainMultipleBlankLinesInARow" ruleCheckId="SA1507">
        <context>The code must not contain multiple blank lines in a row.</context>
        <line>44</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>25</line>
        <index>955</index>
        <endIndex>1012</endIndex>
        <startLine>25</startLine>
        <startColumn>1</startColumn>
        <endLine>25</endLine>
        <endColumn>58</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>26</line>
        <index>1015</index>
        <endIndex>1083</endIndex>
        <startLine>26</startLine>
        <startColumn>1</startColumn>
        <endLine>26</endLine>
        <endColumn>69</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>27</line>
        <index>1086</index>
        <endIndex>1154</endIndex>
        <startLine>27</startLine>
        <startColumn>1</startColumn>
        <endLine>27</endLine>
        <endColumn>69</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>28</line>
        <index>1157</index>
        <endIndex>1225</endIndex>
        <startLine>28</startLine>
        <startColumn>1</startColumn>
        <endLine>28</endLine>
        <endColumn>69</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>29</line>
        <index>1228</index>
        <endIndex>1296</endIndex>
        <startLine>29</startLine>
        <startColumn>1</startColumn>
        <endLine>29</endLine>
        <endColumn>69</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>30</line>
        <index>1299</index>
        <endIndex>1366</endIndex>
        <startLine>30</startLine>
        <startColumn>1</startColumn>
        <endLine>30</endLine>
        <endColumn>68</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>32</line>
        <index>1371</index>
        <endIndex>1461</endIndex>
        <startLine>32</startLine>
        <startColumn>1</startColumn>
        <endLine>32</endLine>
        <endColumn>91</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>36</line>
        <index>1528</index>
        <endIndex>1583</endIndex>
        <startLine>36</startLine>
        <startColumn>38</startColumn>
        <endLine>36</endLine>
        <endColumn>93</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>37</line>
        <index>1623</index>
        <endIndex>1669</endIndex>
        <startLine>37</startLine>
        <startColumn>38</startColumn>
        <endLine>37</endLine>
        <endColumn>84</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>39</line>
        <index>1797</index>
        <endIndex>1846</endIndex>
        <startLine>39</startLine>
        <startColumn>47</startColumn>
        <endLine>39</endLine>
        <endColumn>96</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>40</line>
        <index>1895</index>
        <endIndex>1941</endIndex>
        <startLine>40</startLine>
        <startColumn>47</startColumn>
        <endLine>40</endLine>
        <endColumn>93</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="SQLDataLoader.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:30:24.281</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to readAllNaturalPersonsFromDatabase must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>24</line>
        <index>701</index>
        <endIndex>733</endIndex>
        <startLine>24</startLine>
        <startColumn>13</startColumn>
        <endLine>24</endLine>
        <endColumn>45</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to readAllJuridicalPersonsFromDatabase must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>27</line>
        <index>841</index>
        <endIndex>875</endIndex>
        <startLine>27</startLine>
        <startColumn>13</startColumn>
        <endLine>27</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to readAllTaxesFromDatabase must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>30</line>
        <index>983</index>
        <endIndex>1006</endIndex>
        <startLine>30</startLine>
        <startColumn>13</startColumn>
        <endLine>30</endLine>
        <endColumn>36</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to readAllTaxesPayedByNatPersonsFromDatabase must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>33</line>
        <index>1114</index>
        <endIndex>1154</endIndex>
        <startLine>33</startLine>
        <startColumn>13</startColumn>
        <endLine>33</endLine>
        <endColumn>53</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to readAllTaxesPayedByJurPersonsFromDatabase must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>36</line>
        <index>1262</index>
        <endIndex>1302</endIndex>
        <startLine>36</startLine>
        <startColumn>13</startColumn>
        <endLine>36</endLine>
        <endColumn>53</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>42</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>63</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: readAllTaxesPayedByJurPersonsFromDatabase.</context>
        <line>42</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>66</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>88</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: readAllTaxesPayedByNatPersonsFromDatabase.</context>
        <line>66</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>91</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>110</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>102</line>
        <index>4998</index>
        <endIndex>5038</endIndex>
        <startLine>102</startLine>
        <startColumn>31</startColumn>
        <endLine>102</endLine>
        <endColumn>71</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: readAllTaxesFromDatabase.</context>
        <line>91</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>113</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>126</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: readAllNaturalPersonsFromDatabase.</context>
        <line>113</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>129</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>144</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: readAllJuridicalPersonsFromDatabase.</context>
        <line>129</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="Tax.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:24:39.633</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtEndOfFile" ruleCheckId="SA1518">
        <context>The code must not contain blank lines at the end of the file.</context>
        <line>45</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainMultipleBlankLinesInARow" ruleCheckId="SA1507">
        <context>The code must not contain multiple blank lines in a row.</context>
        <line>45</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>4</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>31</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketMustBeFollowedByBlankLine" ruleCheckId="SA1513">
        <context>Statements or elements wrapped in curly brackets must be followed by a blank line.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to _isValid must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>16</line>
        <index>396</index>
        <endIndex>403</endIndex>
        <startLine>16</startLine>
        <startColumn>24</startColumn>
        <endLine>16</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to _isValid must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>20</line>
        <index>470</index>
        <endIndex>477</endIndex>
        <startLine>20</startLine>
        <startColumn>17</startColumn>
        <endLine>20</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to _isValid must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>24</line>
        <index>639</index>
        <endIndex>646</endIndex>
        <startLine>24</startLine>
        <startColumn>84</startColumn>
        <endLine>24</endLine>
        <endColumn>91</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to TaxId must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>24</line>
        <index>676</index>
        <endIndex>680</endIndex>
        <startLine>24</startLine>
        <startColumn>121</startColumn>
        <endLine>24</endLine>
        <endColumn>125</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>22</line>
        <index>507</index>
        <endIndex>508</endIndex>
        <startLine>22</startLine>
        <startColumn>17</startColumn>
        <endLine>22</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementMustNotBeOnSingleLine" ruleCheckId="SA1502">
        <context>The constructor must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>31</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>35</line>
        <index>927</index>
        <endIndex>936</endIndex>
        <startLine>35</startLine>
        <startColumn>28</startColumn>
        <endLine>35</endLine>
        <endColumn>37</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to TaxId must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>33</line>
        <index>858</index>
        <endIndex>862</endIndex>
        <startLine>33</startLine>
        <startColumn>13</startColumn>
        <endLine>33</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to TaxName must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>34</line>
        <index>883</index>
        <endIndex>889</endIndex>
        <startLine>34</startLine>
        <startColumn>13</startColumn>
        <endLine>34</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to DocumentName must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>35</line>
        <index>912</index>
        <endIndex>923</endIndex>
        <startLine>35</startLine>
        <startColumn>13</startColumn>
        <endLine>35</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to IsValid must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>36</line>
        <index>952</index>
        <endIndex>958</endIndex>
        <startLine>36</startLine>
        <startColumn>13</startColumn>
        <endLine>36</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="TaxPayedByJuridicalPerson.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:57:14.867</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Id must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByJuridicalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>10</line>
        <index>298</index>
        <endIndex>299</endIndex>
        <startLine>10</startLine>
        <startColumn>13</startColumn>
        <endLine>10</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxId must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByJuridicalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>11</line>
        <index>320</index>
        <endIndex>324</endIndex>
        <startLine>11</startLine>
        <startColumn>13</startColumn>
        <endLine>11</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayerId must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByJuridicalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>12</line>
        <index>346</index>
        <endIndex>352</endIndex>
        <startLine>12</startLine>
        <startColumn>13</startColumn>
        <endLine>12</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxName must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByJuridicalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>13</line>
        <index>376</index>
        <endIndex>382</endIndex>
        <startLine>13</startLine>
        <startColumn>13</startColumn>
        <endLine>13</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayerName must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByJuridicalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>14</line>
        <index>408</index>
        <endIndex>416</endIndex>
        <startLine>14</startLine>
        <startColumn>13</startColumn>
        <endLine>14</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to OnPayedDate must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByJuridicalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>444</index>
        <endIndex>454</endIndex>
        <startLine>15</startLine>
        <startColumn>13</startColumn>
        <endLine>15</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Amount must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByJuridicalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>16</line>
        <index>482</index>
        <endIndex>487</endIndex>
        <startLine>16</startLine>
        <startColumn>13</startColumn>
        <endLine>16</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="TaxPayedByNaturalPerson.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:57:19.946</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Id must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>12</line>
        <index>367</index>
        <endIndex>368</endIndex>
        <startLine>12</startLine>
        <startColumn>13</startColumn>
        <endLine>12</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxId must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>13</line>
        <index>389</index>
        <endIndex>393</endIndex>
        <startLine>13</startLine>
        <startColumn>13</startColumn>
        <endLine>13</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayerId must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>14</line>
        <index>415</index>
        <endIndex>421</endIndex>
        <startLine>14</startLine>
        <startColumn>13</startColumn>
        <endLine>14</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxName must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>445</index>
        <endIndex>451</endIndex>
        <startLine>15</startLine>
        <startColumn>13</startColumn>
        <endLine>15</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayerName must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>16</line>
        <index>477</index>
        <endIndex>485</endIndex>
        <startLine>16</startLine>
        <startColumn>13</startColumn>
        <endLine>16</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayerSurname must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>17</line>
        <index>513</index>
        <endIndex>524</endIndex>
        <startLine>17</startLine>
        <startColumn>13</startColumn>
        <endLine>17</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to OnPayedDate must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>18</line>
        <index>555</index>
        <endIndex>565</endIndex>
        <startLine>18</startLine>
        <startColumn>13</startColumn>
        <endLine>18</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Amount must begin with the 'this.', 'base.', 'object.' or 'TaxPayedByNaturalPerson.' or 'PayedTax.' prefix to indicate the intended method call. </context>
        <line>19</line>
        <index>593</index>
        <endIndex>598</endIndex>
        <startLine>19</startLine>
        <startColumn>13</startColumn>
        <endLine>19</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="MainWindow.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.22 23:48:35.899</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>5</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'MainWindow.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>392</index>
        <endIndex>410</endIndex>
        <startLine>15</startLine>
        <startColumn>13</startColumn>
        <endLine>15</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: createTables.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>45</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>51</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>57</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="AllTaxes.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:05:14.650</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>4</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'AllTaxes.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>12</line>
        <index>255</index>
        <endIndex>273</endIndex>
        <startLine>12</startLine>
        <startColumn>13</startColumn>
        <endLine>12</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: addNewTax.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: removeSelectedTax.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfTaxIsUsed must begin with the 'this.', 'base.', 'object.' or 'AllTaxes.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>776</index>
        <endIndex>791</endIndex>
        <startLine>28</startLine>
        <startColumn>55</startColumn>
        <endLine>28</endLine>
        <endColumn>70</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfTaxIsUsed must begin with the 'this.', 'base.', 'object.' or 'AllTaxes.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>29</line>
        <index>908</index>
        <endIndex>923</endIndex>
        <startLine>29</startLine>
        <startColumn>57</startColumn>
        <endLine>29</endLine>
        <endColumn>72</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>43</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfTaxIsUsed&lt;T&gt;.</context>
        <line>43</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="CreateNewJuridicalPerson.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:32:47.286</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'CreateNewJuridicalPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>13</line>
        <index>286</index>
        <endIndex>304</endIndex>
        <startLine>13</startLine>
        <startColumn>13</startColumn>
        <endLine>13</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfCodeIsUsed must begin with the 'this.', 'base.', 'object.' or 'CreateNewJuridicalPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>32</line>
        <index>847</index>
        <endIndex>863</endIndex>
        <startLine>32</startLine>
        <startColumn>17</startColumn>
        <endLine>32</endLine>
        <endColumn>33</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>18</line>
        <index>414</index>
        <endIndex>415</endIndex>
        <startLine>18</startLine>
        <startColumn>13</startColumn>
        <endLine>18</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>24</line>
        <index>586</index>
        <endIndex>587</endIndex>
        <startLine>24</startLine>
        <startColumn>13</startColumn>
        <endLine>24</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>48</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>55</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfCodeIsUsed.</context>
        <line>48</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>61</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>61</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="CreateNewNaturalPerson.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:24:41.747</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainMultipleBlankLinesInARow" ruleCheckId="SA1507">
        <context>The code must not contain multiple blank lines in a row.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainMultipleBlankLinesInARow" ruleCheckId="SA1507">
        <context>The code must not contain multiple blank lines in a row.</context>
        <line>3</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'CreateNewNaturalPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>16</line>
        <index>318</index>
        <endIndex>336</endIndex>
        <startLine>16</startLine>
        <startColumn>13</startColumn>
        <endLine>16</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>106</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>111</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkUserInputs must begin with the 'this.', 'base.', 'object.' or 'CreateNewNaturalPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>21</line>
        <index>455</index>
        <endIndex>469</endIndex>
        <startLine>21</startLine>
        <startColumn>18</startColumn>
        <endLine>21</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkUserInputs.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfIdentificationCodeIsUsed must begin with the 'this.', 'base.', 'object.' or 'CreateNewNaturalPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>55</line>
        <index>1827</index>
        <endIndex>1857</endIndex>
        <startLine>55</startLine>
        <startColumn>17</startColumn>
        <endLine>55</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfPassportCodeIsUsed must begin with the 'this.', 'base.', 'object.' or 'CreateNewNaturalPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>61</line>
        <index>2056</index>
        <endIndex>2080</endIndex>
        <startLine>61</startLine>
        <startColumn>17</startColumn>
        <endLine>61</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>76</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfPassportCodeIsUsed.</context>
        <line>76</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>91</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfIdentificationCodeIsUsed.</context>
        <line>91</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>106</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>111</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="CreateNewTax.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:33:23.723</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'CreateNewTax.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>11</line>
        <index>220</index>
        <endIndex>238</endIndex>
        <startLine>11</startLine>
        <startColumn>13</startColumn>
        <endLine>11</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: button_Click.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="CreateNewTaxByJurPerson.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:40:42.493</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>28</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All constructors must be placed after all fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByJurPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>13</line>
        <index>300</index>
        <endIndex>318</endIndex>
        <startLine>13</startLine>
        <startColumn>13</startColumn>
        <endLine>13</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxesNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByJurPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>17</line>
        <index>435</index>
        <endIndex>444</endIndex>
        <startLine>17</startLine>
        <startColumn>17</startColumn>
        <endLine>17</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayersNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByJurPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>634</index>
        <endIndex>644</endIndex>
        <startLine>22</startLine>
        <startColumn>17</startColumn>
        <endLine>22</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxesNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByJurPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>772</index>
        <endIndex>781</endIndex>
        <startLine>25</startLine>
        <startColumn>51</startColumn>
        <endLine>25</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayersNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByJurPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>838</index>
        <endIndex>848</endIndex>
        <startLine>26</startLine>
        <startColumn>54</startColumn>
        <endLine>26</endLine>
        <endColumn>64</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>31</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>31</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: button_Click.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>103</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfTaxIsValid must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByJurPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>44</line>
        <index>1367</index>
        <endIndex>1383</endIndex>
        <startLine>44</startLine>
        <startColumn>17</startColumn>
        <endLine>44</endLine>
        <endColumn>33</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'foreach' is invalid.</context>
        <line>36</line>
        <index>1127</index>
        <endIndex>1133</endIndex>
        <startLine>36</startLine>
        <startColumn>13</startColumn>
        <endLine>36</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>38</line>
        <index>1213</index>
        <endIndex>1214</endIndex>
        <startLine>38</startLine>
        <startColumn>17</startColumn>
        <endLine>38</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>44</line>
        <index>1363</index>
        <endIndex>1364</endIndex>
        <startLine>44</startLine>
        <startColumn>13</startColumn>
        <endLine>44</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>74</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfTaxIsValid.</context>
        <line>74</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>103</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="CreateNewTaxByNatPerson.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:42:40.963</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" ruleCheckId="SA1208">
        <context>System using directives must be placed before all other using directives.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the for statement must be wrapped in opening and closing curly brackets.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the for statement must be wrapped in opening and closing curly brackets.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All constructors must be placed after all fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByNatPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>16</line>
        <index>393</index>
        <endIndex>411</endIndex>
        <startLine>16</startLine>
        <startColumn>13</startColumn>
        <endLine>16</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxesNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByNatPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>19</line>
        <index>513</index>
        <endIndex>522</endIndex>
        <startLine>19</startLine>
        <startColumn>17</startColumn>
        <endLine>19</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayersNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByNatPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>680</index>
        <endIndex>690</endIndex>
        <startLine>22</startLine>
        <startColumn>17</startColumn>
        <endLine>22</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TaxesNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByNatPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>24</line>
        <index>862</index>
        <endIndex>871</endIndex>
        <startLine>24</startLine>
        <startColumn>51</startColumn>
        <endLine>24</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PayersNames must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByNatPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>928</index>
        <endIndex>938</endIndex>
        <startLine>25</startLine>
        <startColumn>54</startColumn>
        <endLine>25</endLine>
        <endColumn>64</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>104</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfTaxIsValid must begin with the 'this.', 'base.', 'object.' or 'CreateNewTaxByNatPerson.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>43</line>
        <index>1447</index>
        <endIndex>1463</endIndex>
        <startLine>43</startLine>
        <startColumn>17</startColumn>
        <endLine>43</endLine>
        <endColumn>33</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>43</line>
        <index>1443</index>
        <endIndex>1444</endIndex>
        <startLine>43</startLine>
        <startColumn>13</startColumn>
        <endLine>43</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>59</line>
        <index>1935</index>
        <endIndex>1936</endIndex>
        <startLine>59</startLine>
        <startColumn>13</startColumn>
        <endLine>59</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfTaxIsValid.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>104</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="NaturalPersons.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:29:33.187</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtStartOfFile" ruleCheckId="SA1517">
        <context>The code must not contain blank lines at the start of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'NaturalPersons.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>11</line>
        <index>224</index>
        <endIndex>242</endIndex>
        <startLine>11</startLine>
        <startColumn>13</startColumn>
        <endLine>11</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to checkIfPersonIsBusy must begin with the 'this.', 'base.', 'object.' or 'NaturalPersons.' or 'Window.' prefix to indicate the intended method call. </context>
        <line>20</line>
        <index>584</index>
        <endIndex>602</endIndex>
        <startLine>20</startLine>
        <startColumn>20</startColumn>
        <endLine>20</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>20</line>
        <index>581</index>
        <endIndex>582</endIndex>
        <startLine>20</startLine>
        <startColumn>17</startColumn>
        <endLine>20</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>38</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>45</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: checkIfPersonIsBusy.</context>
        <line>38</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <project key="-768290013">
    <configuration>DEBUG;TRACE</configuration>
  </project>
  <sourcecode name="App.xaml.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:45:12.166</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementMustNotBeOnSingleLine" ruleCheckId="SA1502">
        <context>The method must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="JuridicalPerson.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2020.12.20 20:04:28.287</styleCop>
      <settingsFile>2020.12.20 20:04:28.248</settingsFile>
      <sourceFile>2020.12.23 00:45:06.660</sourceFile>
      <parser>2020.12.20 20:04:28.287</parser>
      <StyleCop.CSharp.DocumentationRules>2020.12.20 20:04:28.287</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-297001298</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2020.12.20 20:04:28.287</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2020.12.20 20:04:28.287</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2020.12.20 20:04:28.287</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="PartialElementsMustBeDocumented" ruleCheckId="SA1601">
        <context>The partial class element must have a documentation header containing either a summary tag or a content tag.</context>
        <line>5</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementMustNotBeOnSingleLine" ruleCheckId="SA1502">
        <context>The constructor must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Id must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>16</line>
        <index>484</index>
        <endIndex>485</endIndex>
        <startLine>16</startLine>
        <startColumn>13</startColumn>
        <endLine>16</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Name must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>17</line>
        <index>506</index>
        <endIndex>509</endIndex>
        <startLine>17</startLine>
        <startColumn>13</startColumn>
        <endLine>17</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to RegistrationDate must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>18</line>
        <index>532</index>
        <endIndex>547</endIndex>
        <startLine>18</startLine>
        <startColumn>13</startColumn>
        <endLine>18</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to RegistrationCode must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>19</line>
        <index>573</index>
        <endIndex>588</endIndex>
        <startLine>19</startLine>
        <startColumn>13</startColumn>
        <endLine>19</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
</stylecopresultscache>